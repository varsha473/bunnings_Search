// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.7.0.0
//      SpecFlow Generator Version:3.7.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Bunnings_Search.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.7.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("All tests for Search Feature")]
    public partial class AllTestsForSearchFeatureFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "All_Tests_For_Search.Feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "All tests for Search Feature", @"	In order to validate the search feature capabilities on the homepage
	As a user
	I want to be able search for a product and verify relevant items are displayed as per the search keyword
	And also verify all the other details and options displayed in the search result", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("1. Search search title")]
        [NUnit.Framework.CategoryAttribute("Search_title")]
        [NUnit.Framework.TestCaseAttribute("chrome", "ratshak", null)]
        public virtual void _1_SearchSearchTitle(string browser, string search_Keyword, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Search_title"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("browser", browser);
            argumentsOfScenario.Add("search_keyword", search_Keyword);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("1. Search search title", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 8
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 9
 testRunner.Given(string.Format("I navigate to bunnings homepage on {0}", browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 10
 testRunner.When(string.Format("I enter {0} and click on the search button", search_Keyword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 11
 testRunner.Then("I verify I am navigated to search results page and verify title", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("2. Search keyword and results - item not stocked")]
        [NUnit.Framework.CategoryAttribute("Search_item_not_stocked")]
        [NUnit.Framework.TestCaseAttribute("chrome", "sleeping bag", null)]
        public virtual void _2_SearchKeywordAndResults_ItemNotStocked(string browser, string search_Keyword, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Search_item_not_stocked"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("browser", browser);
            argumentsOfScenario.Add("search_keyword", search_Keyword);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("2. Search keyword and results - item not stocked", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 18
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 19
 testRunner.Given(string.Format("I navigate to bunnings homepage on {0}", browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 20
 testRunner.When(string.Format("I enter {0} and click on the search button", search_Keyword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 21
 testRunner.Then("I verify I am navigated to search results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 22
 testRunner.And(string.Format("the {0} is displayed in the search title", search_Keyword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 23
 testRunner.And("zero resuts displayed and verify help text displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("3. Verify recent search history")]
        [NUnit.Framework.CategoryAttribute("Search_history")]
        [NUnit.Framework.TestCaseAttribute("chrome", "sand", null)]
        public virtual void _3_VerifyRecentSearchHistory(string browser, string search_Keyword, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Search_history"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("browser", browser);
            argumentsOfScenario.Add("search_keyword", search_Keyword);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("3. Verify recent search history", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 29
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 30
 testRunner.Given(string.Format("I navigate to bunnings homepage on {0}", browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 31
 testRunner.When(string.Format("I enter {0} and click on the search button", search_Keyword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 32
 testRunner.Then("I verify I am navigated to search results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 33
 testRunner.When("I click on the search box again", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 34
 testRunner.Then(string.Format("I verify the {0} is displayed in recent searches", search_Keyword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("4. Search results displayed")]
        [NUnit.Framework.TestCaseAttribute("chrome", "ratshak", null)]
        public virtual void _4_SearchResultsDisplayed(string browser, string search_Keyword, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("browser", browser);
            argumentsOfScenario.Add("search_keyword", search_Keyword);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("4. Search results displayed", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 39
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 40
 testRunner.Given(string.Format("I navigate to bunnings homepage on {0}", browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 41
 testRunner.When(string.Format("I enter {0} and click on the search button", search_Keyword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 42
 testRunner.Then("I verify I am navigated to search results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 43
 testRunner.And(string.Format("the {0} is displayed in the search title", search_Keyword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 44
 testRunner.And("the items displayed in Our Range tab are relevant to the search keyword", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("5. Verify Tabs displayed in search results")]
        [NUnit.Framework.TestCaseAttribute("chrome", "chubby house", "Our Range", null)]
        [NUnit.Framework.TestCaseAttribute("safari", "screws", "D.I.Y Advice", null)]
        [NUnit.Framework.TestCaseAttribute("firefox", "beach chair", "Service", null)]
        [NUnit.Framework.TestCaseAttribute("Edge", "bench", "Other", null)]
        [NUnit.Framework.TestCaseAttribute("ipad_safari", "decking oil", "Other", null)]
        [NUnit.Framework.TestCaseAttribute("ipad_chrome", "fence paint", "Our Range", null)]
        [NUnit.Framework.TestCaseAttribute("ipad_pro_safari", "playground mulch", "D.I.Y Advice", null)]
        [NUnit.Framework.TestCaseAttribute("ipad_pro_chrome", "swing", "Service", null)]
        [NUnit.Framework.TestCaseAttribute("iphone_X_chrome", "slide", "Other", null)]
        [NUnit.Framework.TestCaseAttribute("iphone_X_safari", "chubby house", "Our Range", null)]
        [NUnit.Framework.TestCaseAttribute("andriod_chrome", "pool", "D.I.Y Advice", null)]
        [NUnit.Framework.TestCaseAttribute("Pixel", "play sand", "Service", null)]
        public virtual void _5_VerifyTabsDisplayedInSearchResults(string browser, string search_Keyword, string tabs, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("browser", browser);
            argumentsOfScenario.Add("search_keyword", search_Keyword);
            argumentsOfScenario.Add("tabs", tabs);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("5. Verify Tabs displayed in search results", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 49
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 50
 testRunner.Given(string.Format("I navigate to bunnings homepage on {0}", browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 51
 testRunner.When(string.Format("I enter {0} and click on the search button", search_Keyword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 52
 testRunner.Then("I verify I am navigated to search results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 53
 testRunner.Then(string.Format("I verify four {0} with the number of search results displayed for each", tabs), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 54
 testRunner.And("I can click on the tabs with more than one result displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 55
 testRunner.And("I also verify the search results displayed in each tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("6. Clear recent search history")]
        [NUnit.Framework.TestCaseAttribute("chrome", "screws 100 pack", "clear", null)]
        [NUnit.Framework.TestCaseAttribute("safari", "lavender", "clear", null)]
        [NUnit.Framework.TestCaseAttribute("firefox", "rosemary", "clear", null)]
        [NUnit.Framework.TestCaseAttribute("Edge", "wood", "clear", null)]
        [NUnit.Framework.TestCaseAttribute("ipad_safari", "paint", "clear", null)]
        [NUnit.Framework.TestCaseAttribute("ipad_chrome", "fence", "clear", null)]
        [NUnit.Framework.TestCaseAttribute("ipad_pro_safari", "mulch", "clear", null)]
        [NUnit.Framework.TestCaseAttribute("ipad_pro_chrome", "soil", "clear", null)]
        [NUnit.Framework.TestCaseAttribute("iphone_X_chrome", "fan", "clear", null)]
        [NUnit.Framework.TestCaseAttribute("iphone_X_safari", "tent", "clear", null)]
        [NUnit.Framework.TestCaseAttribute("andriod_chrome", "sleeper", "clear", null)]
        [NUnit.Framework.TestCaseAttribute("Pixel", "bag", "clear", null)]
        public virtual void _6_ClearRecentSearchHistory(string browser, string search_Keyword, string cleared, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("browser", browser);
            argumentsOfScenario.Add("search_keyword", search_Keyword);
            argumentsOfScenario.Add("cleared", cleared);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("6. Clear recent search history", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 71
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 72
 testRunner.Given(string.Format("I navigate to bunnings homepage on {0}", browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 73
 testRunner.When(string.Format("I enter {0} and click on the search button", search_Keyword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 74
 testRunner.Then("I verify I am navigated to search results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 75
 testRunner.When("I click on the search box again", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 76
 testRunner.And("click on the clear recent searches text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 77
 testRunner.Then(string.Format("I verify the recent history is {0}", cleared), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 78
 testRunner.And(string.Format("the {0} is not displayed in recent searches", search_Keyword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("7. Verify sorting options in search results page")]
        [NUnit.Framework.TestCaseAttribute("chrome", "rose plant", "Relevance", null)]
        [NUnit.Framework.TestCaseAttribute("safari", "lavender", "Price (Low-high)", null)]
        [NUnit.Framework.TestCaseAttribute("firefox", "rosemary", "Price (high-low", null)]
        [NUnit.Framework.TestCaseAttribute("Edge", "wood", "Product name (A-z)", null)]
        [NUnit.Framework.TestCaseAttribute("ipad_safari", "paint", "Product name (Z-A)", null)]
        [NUnit.Framework.TestCaseAttribute("ipad_chrome", "fence", "Relevance", null)]
        [NUnit.Framework.TestCaseAttribute("ipad_pro_safari", "mulch", "Price (Low-high)", null)]
        [NUnit.Framework.TestCaseAttribute("ipad_pro_chrome", "soil", "Price (high-low", null)]
        [NUnit.Framework.TestCaseAttribute("iphone_X_chrome", "fan", "Product name (A-z)", null)]
        [NUnit.Framework.TestCaseAttribute("iphone_X_safari", "tent", "Product name (Z-A)", null)]
        [NUnit.Framework.TestCaseAttribute("andriod_chrome", "sleeper", "Relevance", null)]
        [NUnit.Framework.TestCaseAttribute("Pixel", "bag", "Price (Low-high)", null)]
        public virtual void _7_VerifySortingOptionsInSearchResultsPage(string browser, string search_Keyword, string sorting_Option, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("browser", browser);
            argumentsOfScenario.Add("search_keyword", search_Keyword);
            argumentsOfScenario.Add("sorting_option", sorting_Option);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("7. Verify sorting options in search results page", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 94
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 95
 testRunner.Given("I navigate to bunnings homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 96
 testRunner.When(string.Format("I enter {0} and click on the search button", search_Keyword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 97
 testRunner.Then("I verify I am navigated to search results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 98
 testRunner.And(string.Format("I verify that I can select the {0} displayed", sorting_Option), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 99
 testRunner.And(string.Format("the search results are updated based on the {0} selected", sorting_Option), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("8. Verify filter options in search results page")]
        [NUnit.Framework.TestCaseAttribute("chrome", "bbq", "Categories", null)]
        [NUnit.Framework.TestCaseAttribute("safari", "beach tent", "Shop By", null)]
        [NUnit.Framework.TestCaseAttribute("firefox", "beach chair", "Buy Online", null)]
        [NUnit.Framework.TestCaseAttribute("Edge", "bench", "Price Range", null)]
        [NUnit.Framework.TestCaseAttribute("ipad_safari", "decking oil", "Brand", null)]
        [NUnit.Framework.TestCaseAttribute("ipad_chrome", "fence paint", "Dimensions (mm)", null)]
        [NUnit.Framework.TestCaseAttribute("ipad_pro_safari", "playground mulch", "Categories", null)]
        [NUnit.Framework.TestCaseAttribute("ipad_pro_chrome", "swing", "Shop By", null)]
        [NUnit.Framework.TestCaseAttribute("iphone_X_chrome", "slide", "Buy Online", null)]
        [NUnit.Framework.TestCaseAttribute("iphone_X_safari", "chubby house", "Price Range", null)]
        [NUnit.Framework.TestCaseAttribute("andriod_chrome", "pool", "Brand", null)]
        [NUnit.Framework.TestCaseAttribute("Pixel", "play sand", "Dimensions (mm)", null)]
        public virtual void _8_VerifyFilterOptionsInSearchResultsPage(string browser, string search_Keyword, string filter_Option, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("browser", browser);
            argumentsOfScenario.Add("search_keyword", search_Keyword);
            argumentsOfScenario.Add("filter_option", filter_Option);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("8. Verify filter options in search results page", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 115
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 116
 testRunner.Given("I navigate to bunnings homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 117
 testRunner.When(string.Format("I enter {0} and click on the search button", search_Keyword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 118
 testRunner.Then("I verify I am navigated to search results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 119
 testRunner.And(string.Format("I verify that I can select the {0} displayed", filter_Option), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 120
 testRunner.And(string.Format("the search results are updated based on the {0} selected", filter_Option), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("9. Verify feedback box displayed")]
        [NUnit.Framework.TestCaseAttribute("chrome", "chubby house", "yes", "na", null)]
        [NUnit.Framework.TestCaseAttribute("safari", "screws", "no", "enter some valid text of more than 20 words", null)]
        [NUnit.Framework.TestCaseAttribute("firefox", "beach chair", "yes", "na", null)]
        [NUnit.Framework.TestCaseAttribute("Edge", "bench", "no", "enter some valid text of more than 5000 words", null)]
        [NUnit.Framework.TestCaseAttribute("ipad_safari", "decking oil", "yes", "na", null)]
        [NUnit.Framework.TestCaseAttribute("ipad_chrome", "fence paint", "no", "enter some valid text of more than 10000 words", null)]
        [NUnit.Framework.TestCaseAttribute("ipad_pro_safari", "playground mulch", "yes", "na", null)]
        [NUnit.Framework.TestCaseAttribute("ipad_pro_chrome", "swing", "no", "enter only one number, eg: \'5\'", null)]
        [NUnit.Framework.TestCaseAttribute("iphone_X_chrome", "slide", "yes", "na", null)]
        [NUnit.Framework.TestCaseAttribute("iphone_X_safari", "chubby house", "no", "enter only one letter, eg: \'o\'", null)]
        [NUnit.Framework.TestCaseAttribute("andriod_chrome", "pool", "yes", "na", null)]
        [NUnit.Framework.TestCaseAttribute("Pixel", "play sand", "no", "enter only one special characters, eg: \'&\'", null)]
        public virtual void _9_VerifyFeedbackBoxDisplayed(string browser, string search_Keyword, string option, string feedback_Text, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("browser", browser);
            argumentsOfScenario.Add("search_keyword", search_Keyword);
            argumentsOfScenario.Add("option", option);
            argumentsOfScenario.Add("feedback_text", feedback_Text);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("9. Verify feedback box displayed", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 136
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 137
 testRunner.Given(string.Format("I navigate to bunnings homepage on {0}", browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 138
 testRunner.When(string.Format("I enter {0} and click on the search button", search_Keyword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 139
 testRunner.Then("I verify I am navigated to search results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 140
 testRunner.And("at the bottom, I verify the feed back box is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 141
 testRunner.When(string.Format("I select {0} and additional {1} if needed", option, feedback_Text), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 142
 testRunner.Then("I verify the message \'Thank you for your feedback\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("10. Search suggesstions")]
        [NUnit.Framework.TestCaseAttribute("chrome", "chubby house", "click on any option", null)]
        [NUnit.Framework.TestCaseAttribute("safari", "screws", "click on any option", null)]
        [NUnit.Framework.TestCaseAttribute("firefox", "beach chair", "click on any option", null)]
        [NUnit.Framework.TestCaseAttribute("Edge", "bench", "click on any option", null)]
        [NUnit.Framework.TestCaseAttribute("ipad_safari", "decking oil", "click on any option", null)]
        [NUnit.Framework.TestCaseAttribute("ipad_chrome", "fence paint", "click on any option", null)]
        [NUnit.Framework.TestCaseAttribute("ipad_pro_safari", "playground mulch", "click on any option", null)]
        [NUnit.Framework.TestCaseAttribute("ipad_pro_chrome", "swing", "click on any option", null)]
        [NUnit.Framework.TestCaseAttribute("iphone_X_chrome", "slide", "click on any option", null)]
        [NUnit.Framework.TestCaseAttribute("iphone_X_safari", "chubby house", "click on any option", null)]
        [NUnit.Framework.TestCaseAttribute("andriod_chrome", "pool", "click on any option", null)]
        [NUnit.Framework.TestCaseAttribute("Pixel", "play sand", "click on any option", null)]
        public virtual void _10_SearchSuggesstions(string browser, string search_Keyword, string suggesstion, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("browser", browser);
            argumentsOfScenario.Add("search_keyword", search_Keyword);
            argumentsOfScenario.Add("suggesstion", suggesstion);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("10. Search suggesstions", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 159
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 160
 testRunner.Given(string.Format("I navigate to bunnings homepage on {0}", browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 161
 testRunner.When(string.Format("I enter {0}", search_Keyword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 162
 testRunner.Then("I verify search suggesstions are displayed based on the keyword specified", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 163
 testRunner.When("I select one of the search suggesstions from the list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 164
 testRunner.And(string.Format("I verify the search results are updated based on the search {0} selected", suggesstion), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("11. Verify header, footer displayed in search results page")]
        [NUnit.Framework.TestCaseAttribute("chrome", "chubby house", null)]
        [NUnit.Framework.TestCaseAttribute("safari", "screws", null)]
        [NUnit.Framework.TestCaseAttribute("firefox", "beach chair", null)]
        [NUnit.Framework.TestCaseAttribute("Edge", "bench", null)]
        [NUnit.Framework.TestCaseAttribute("ipad_safari", "decking oil", null)]
        [NUnit.Framework.TestCaseAttribute("ipad_chrome", "fence paint", null)]
        [NUnit.Framework.TestCaseAttribute("ipad_pro_safari", "playground mulch", null)]
        [NUnit.Framework.TestCaseAttribute("ipad_pro_chrome", "swing", null)]
        [NUnit.Framework.TestCaseAttribute("iphone_X_chrome", "slide", null)]
        [NUnit.Framework.TestCaseAttribute("iphone_X_safari", "chubby house", null)]
        [NUnit.Framework.TestCaseAttribute("andriod_chrome", "pool", null)]
        [NUnit.Framework.TestCaseAttribute("Pixel", "play sand", null)]
        public virtual void _11_VerifyHeaderFooterDisplayedInSearchResultsPage(string browser, string search_Keyword, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("browser", browser);
            argumentsOfScenario.Add("search_keyword", search_Keyword);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("11. Verify header, footer displayed in search results page", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 181
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 182
 testRunner.Given(string.Format("I navigate to bunnings homepage on {0}", browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 183
 testRunner.When(string.Format("I enter {0} and click on the search button", search_Keyword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 184
 testRunner.Then("I verify I am navigated to search results page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 185
 testRunner.And("I verify the header and footers displayed and in-line with bunnings home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
